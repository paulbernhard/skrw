continue
method
continue
errors_for
next
method
continue
errors_for
continue
errors_for
continue
errors_for
continue
next
continue
@object.errors.full_messages
messages
next
errors_for
continue
errors_for
@object
object
continue
errors_for
continue
errors_for
continue
object.errors.full_messages_for(:email)
object.errors.full_messages
object.errors.any?
object.errors
continue
output
continue
output
continue
output
message
continue
label(method)
send(field_type, method)
send(field_type)
continue
field_options
continue
options
continue
options
continue
send(field_type, method)
field_type
@template.content_tag(:div) { label(method) }
label(method)
self.label(method, text)
method
self
@template
continue
@template.content_tag(:div) {"hellow"}
%Q(<div class="hellow"></div>)
capture
concat "hello"
content_tag(:div) { "something" }
@template.capture(&block)
@template == self
self
@template
@proc
@options
@object
@object_name
@template
continue
concat content_tag(:div, class: "#{base_class}row") { content }
content_tag(:div, class: "#{base_class}row") { content }
content
continue
&block
block
content = @template.capture(&block)
block
@template.capture(&block)
@template
continue
output
output[:class] = ((output[:class] || "") + " #{class_name}").strip
output[:class] = nil
output[:class] = ((output[:class] || "") + " #{class_name}").strip
output[:class] = ((output[:class] || "") + "#{class_name}").strip
output[:class] = ((output[:class] || "") + "#{class_name}).strip
output = options.dup
output = options
options.dup
continue
options
text
continue
options
continue
options
text
continue
class_name
options
continue
options
class_name
continue
super(method, "WTF label")
super
continue
options[:wtf].nil?
options[:class].nil?
options[:class]
options.class
options
continue
options.class
options
continue
say_hi
continue
flash
continue
current_user
continue
user_signed_in?
continue
authenticate_user!
current_user
